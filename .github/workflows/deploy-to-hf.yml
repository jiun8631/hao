# 文件名: .github/workflows/deploy-to-hf.yml

name: Build and Deploy to HF Space (v7 - Final Branch Fix)

on:
  push:
    branches:
      - main # 如果你的主分支是 master，请改成 master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 第 1 步：簽出你的代碼
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # 第 2 步：安裝並設置 Hugo 環境
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 第 3 步：執行 Hugo 構建命令
      - name: Build with Hugo
        run: hugo --minify

      # 第 4 步：修复分支名并使用 Token over SSH 部署
      # ⚠️ 這是唯一需要你修改的地方 ⚠️
      - name: Deploy to HF Space (Branch Fixed)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USER: "yong3976"     # 👈 把它換成你的 HF 用戶名
          SPACE_NAME: "hao"  # 👈 把它換成你的 Space 名
        run: |
          # 進入 Hugo 生成的 public 文件夾
          cd public
          
          # 初始化 Git 倉庫
          git init
          
          # 【【【 关键修正处 】】】
          # 无论默认分支名叫什么，我们都强制创建一个名为 `main` 的分支并切换过去
          # git checkout -b <branch_name> 会创建新分支并立即切换
          git checkout -b main
          
          # 安装並配置 Git LFS
          git lfs install
          echo '* filter=lfs diff=lfs merge=lfs' > .gitattributes
          
          # 配置 Git 用戶信息
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          
          # 添加遠程倉庫地址
          HF_SPACE_GIT_URL="https://hf_token:${HF_TOKEN}@huggingface.co/spaces/${HF_USER}/${SPACE_NAME}"
          git remote add hf_space "${HF_SPACE_GIT_URL}"
          
          # 添加所有文件並提交
          git add .
          git commit -m "Deploy from GitHub Action ${{ github.sha }}"
          
          # 強制推送到 HF Space 的 main 分支
          # 现在本地分支名和远程目标分支名都是 main，不会再出错了
          git push --force hf_space main
